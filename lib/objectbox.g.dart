// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'core/databases/adapters/objectbox/entities.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 1315674973270407540),
      name: 'StoryObjectBox',
      lastPropertyId: const obx_int.IdUid(17, 5915059271383518737),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6204756630438174140),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2750498315094758991),
            name: 'version',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 7025945378308925607),
            name: 'type',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 1751720408046278054),
            name: 'year',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 615116047335897532),
            name: 'month',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 940723986012690883),
            name: 'day',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 8843642523309181931),
            name: 'hour',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 2131953642176057257),
            name: 'minute',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 5638597855483599562),
            name: 'second',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 5531891690385891245),
            name: 'starred',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 3082650409675229587),
            name: 'feeling',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 3684818254319588064),
            name: 'createdAt',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 7254742374879835082),
            name: 'updatedAt',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 8089752820298150449),
            name: 'movedToBinAt',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 5385641444276770743),
            name: 'changes',
            type: 30,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(16, 7807583801066732157),
            name: 'tags',
            type: 30,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(17, 5915059271383518737),
            name: 'metadata',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 5971596053644243407),
      name: 'TagObjectBox',
      lastPropertyId: const obx_int.IdUid(8, 5827189541962655845),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6944916622958026852),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 4062181998971940528),
            name: 'title',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 1379748706441133316),
            name: 'index',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 5810516044808250575),
            name: 'version',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 8917565351877340122),
            name: 'starred',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 6470309032425962295),
            name: 'emoji',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 5242213206519628615),
            name: 'createdAt',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 5827189541962655845),
            name: 'updatedAt',
            type: 10,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(2, 5971596053644243407),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    StoryObjectBox: obx_int.EntityDefinition<StoryObjectBox>(
        model: _entities[0],
        toOneRelations: (StoryObjectBox object) => [],
        toManyRelations: (StoryObjectBox object) => {},
        getId: (StoryObjectBox object) => object.id,
        setId: (StoryObjectBox object, int id) {
          object.id = id;
        },
        objectToFB: (StoryObjectBox object, fb.Builder fbb) {
          final typeOffset = fbb.writeString(object.type);
          final feelingOffset =
              object.feeling == null ? null : fbb.writeString(object.feeling!);
          final changesOffset = fbb.writeList(
              object.changes.map(fbb.writeString).toList(growable: false));
          final tagsOffset = object.tags == null
              ? null
              : fbb.writeList(
                  object.tags!.map(fbb.writeString).toList(growable: false));
          final metadataOffset = object.metadata == null
              ? null
              : fbb.writeString(object.metadata!);
          fbb.startTable(18);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.version);
          fbb.addOffset(2, typeOffset);
          fbb.addInt64(3, object.year);
          fbb.addInt64(4, object.month);
          fbb.addInt64(5, object.day);
          fbb.addInt64(6, object.hour);
          fbb.addInt64(7, object.minute);
          fbb.addInt64(8, object.second);
          fbb.addBool(9, object.starred);
          fbb.addOffset(10, feelingOffset);
          fbb.addInt64(11, object.createdAt.millisecondsSinceEpoch);
          fbb.addInt64(12, object.updatedAt.millisecondsSinceEpoch);
          fbb.addInt64(13, object.movedToBinAt?.millisecondsSinceEpoch);
          fbb.addOffset(14, changesOffset);
          fbb.addOffset(15, tagsOffset);
          fbb.addOffset(16, metadataOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final movedToBinAtValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 30);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final versionParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final typeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final yearParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final monthParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final dayParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0);
          final hourParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 16);
          final minuteParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 18);
          final secondParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 20);
          final starredParam =
              const fb.BoolReader().vTableGetNullable(buffer, rootOffset, 22);
          final feelingParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 24);
          final createdAtParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 26, 0));
          final updatedAtParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 28, 0));
          final movedToBinAtParam = movedToBinAtValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(movedToBinAtValue);
          final changesParam = const fb.ListReader<String>(
                  fb.StringReader(asciiOptimization: true),
                  lazy: false)
              .vTableGet(buffer, rootOffset, 32, []);
          final tagsParam = const fb.ListReader<String>(
                  fb.StringReader(asciiOptimization: true),
                  lazy: false)
              .vTableGetNullable(buffer, rootOffset, 34);
          final metadataParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 36);
          final object = StoryObjectBox(
              id: idParam,
              version: versionParam,
              type: typeParam,
              year: yearParam,
              month: monthParam,
              day: dayParam,
              hour: hourParam,
              minute: minuteParam,
              second: secondParam,
              starred: starredParam,
              feeling: feelingParam,
              createdAt: createdAtParam,
              updatedAt: updatedAtParam,
              movedToBinAt: movedToBinAtParam,
              changes: changesParam,
              tags: tagsParam,
              metadata: metadataParam);

          return object;
        }),
    TagObjectBox: obx_int.EntityDefinition<TagObjectBox>(
        model: _entities[1],
        toOneRelations: (TagObjectBox object) => [],
        toManyRelations: (TagObjectBox object) => {},
        getId: (TagObjectBox object) => object.id,
        setId: (TagObjectBox object, int id) {
          object.id = id;
        },
        objectToFB: (TagObjectBox object, fb.Builder fbb) {
          final titleOffset = fbb.writeString(object.title);
          final emojiOffset =
              object.emoji == null ? null : fbb.writeString(object.emoji!);
          fbb.startTable(9);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, titleOffset);
          fbb.addInt64(2, object.index);
          fbb.addInt64(3, object.version);
          fbb.addBool(4, object.starred);
          fbb.addOffset(5, emojiOffset);
          fbb.addInt64(6, object.createdAt.millisecondsSinceEpoch);
          fbb.addInt64(7, object.updatedAt.millisecondsSinceEpoch);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final titleParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final indexParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 8);
          final versionParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final starredParam =
              const fb.BoolReader().vTableGetNullable(buffer, rootOffset, 12);
          final emojiParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 14);
          final createdAtParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0));
          final updatedAtParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0));
          final object = TagObjectBox(
              id: idParam,
              title: titleParam,
              index: indexParam,
              version: versionParam,
              starred: starredParam,
              emoji: emojiParam,
              createdAt: createdAtParam,
              updatedAt: updatedAtParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [StoryObjectBox] entity fields to define ObjectBox queries.
class StoryObjectBox_ {
  /// See [StoryObjectBox.id].
  static final id =
      obx.QueryIntegerProperty<StoryObjectBox>(_entities[0].properties[0]);

  /// See [StoryObjectBox.version].
  static final version =
      obx.QueryIntegerProperty<StoryObjectBox>(_entities[0].properties[1]);

  /// See [StoryObjectBox.type].
  static final type =
      obx.QueryStringProperty<StoryObjectBox>(_entities[0].properties[2]);

  /// See [StoryObjectBox.year].
  static final year =
      obx.QueryIntegerProperty<StoryObjectBox>(_entities[0].properties[3]);

  /// See [StoryObjectBox.month].
  static final month =
      obx.QueryIntegerProperty<StoryObjectBox>(_entities[0].properties[4]);

  /// See [StoryObjectBox.day].
  static final day =
      obx.QueryIntegerProperty<StoryObjectBox>(_entities[0].properties[5]);

  /// See [StoryObjectBox.hour].
  static final hour =
      obx.QueryIntegerProperty<StoryObjectBox>(_entities[0].properties[6]);

  /// See [StoryObjectBox.minute].
  static final minute =
      obx.QueryIntegerProperty<StoryObjectBox>(_entities[0].properties[7]);

  /// See [StoryObjectBox.second].
  static final second =
      obx.QueryIntegerProperty<StoryObjectBox>(_entities[0].properties[8]);

  /// See [StoryObjectBox.starred].
  static final starred =
      obx.QueryBooleanProperty<StoryObjectBox>(_entities[0].properties[9]);

  /// See [StoryObjectBox.feeling].
  static final feeling =
      obx.QueryStringProperty<StoryObjectBox>(_entities[0].properties[10]);

  /// See [StoryObjectBox.createdAt].
  static final createdAt =
      obx.QueryDateProperty<StoryObjectBox>(_entities[0].properties[11]);

  /// See [StoryObjectBox.updatedAt].
  static final updatedAt =
      obx.QueryDateProperty<StoryObjectBox>(_entities[0].properties[12]);

  /// See [StoryObjectBox.movedToBinAt].
  static final movedToBinAt =
      obx.QueryDateProperty<StoryObjectBox>(_entities[0].properties[13]);

  /// See [StoryObjectBox.changes].
  static final changes = obx.QueryStringVectorProperty<StoryObjectBox>(
      _entities[0].properties[14]);

  /// See [StoryObjectBox.tags].
  static final tags = obx.QueryStringVectorProperty<StoryObjectBox>(
      _entities[0].properties[15]);

  /// See [StoryObjectBox.metadata].
  static final metadata =
      obx.QueryStringProperty<StoryObjectBox>(_entities[0].properties[16]);
}

/// [TagObjectBox] entity fields to define ObjectBox queries.
class TagObjectBox_ {
  /// See [TagObjectBox.id].
  static final id =
      obx.QueryIntegerProperty<TagObjectBox>(_entities[1].properties[0]);

  /// See [TagObjectBox.title].
  static final title =
      obx.QueryStringProperty<TagObjectBox>(_entities[1].properties[1]);

  /// See [TagObjectBox.index].
  static final index =
      obx.QueryIntegerProperty<TagObjectBox>(_entities[1].properties[2]);

  /// See [TagObjectBox.version].
  static final version =
      obx.QueryIntegerProperty<TagObjectBox>(_entities[1].properties[3]);

  /// See [TagObjectBox.starred].
  static final starred =
      obx.QueryBooleanProperty<TagObjectBox>(_entities[1].properties[4]);

  /// See [TagObjectBox.emoji].
  static final emoji =
      obx.QueryStringProperty<TagObjectBox>(_entities[1].properties[5]);

  /// See [TagObjectBox.createdAt].
  static final createdAt =
      obx.QueryDateProperty<TagObjectBox>(_entities[1].properties[6]);

  /// See [TagObjectBox.updatedAt].
  static final updatedAt =
      obx.QueryDateProperty<TagObjectBox>(_entities[1].properties[7]);
}
